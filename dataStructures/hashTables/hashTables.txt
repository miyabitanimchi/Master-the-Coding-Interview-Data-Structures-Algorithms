Hash Tables... aka hash maps, maps, Unordered maps, Dictionaries, objects
Objects in JavaScript are a type of hash table.
Hash tables are called diffently in defferent languages (e.g. Python... Dictionaries)

A way hash tables work with is keys used an an indices.

Idempotent... 冪等元（べきとうげん）??

Every time you add a propety and value into a memory, hash function gets executed
to where to store the data

Difference between SHA-256 and MD5?



Problems of Hash Tables... COLLISION
Hash function doesn't evenly distribute the data until every addres is full, 
it ramdomly assigns a space and memory and put the data in there.
Collision is inevitable in hash tables with enough data and limited memory.

When collision is happening, it'll be 
O(n/k)
k is the size of the hash table


There are ways to handle with collisions
- Linked List
-



Diffrence between Map and Object?

- Map: 
   *  Map allows us to save ANY DATA TYPE as the key
   * It maintains insertion order
- Object:
    * It only saves the key as a STRING



What is Set??
* Similar to Map, but it ONLY stores the key, not the value


Why hash tables?
Hash tables works great and fast when we want quick access to certain values.



Array vs Hash Tables

        A        HS
search: O(n)     O(1)
lookup: O(1)     O(1)
push:   O(1)     
insert: O(n)     O(1)
delete: O(n)     O(1)

- Search
    - Array: takes long time since we need to loop through a whole Array
    - HS: Fast, we just grab the key
- Insert
    - Array: needs to shift
    - Fast, simply hash and create the key, (might be collisions there)
- lookup
    - Array: fast, grab the index
    - HS: fast, use the key
- Order
    - Array: it keeps the order (each item is placed next to each other on a shelf in memory)
    - NO concept of order (kind of placed all over the place)
    * Python Ditionaries... it's ordered by default!




Hash Tables Pros and Cons

- Pros
    - Fast lookups *
    - Fast inserts
    - Flexible keys ... if it's an array it's only the indices
- Cons
    - Unordered
    - Slow key iteration ... if you need to output all the keys, then need to map through all the memory spaces

* Good collision solution needed... but usually don't need to worry about too much
  since a language and computer can take care of it for us